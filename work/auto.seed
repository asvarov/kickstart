# For information about this file see:
# https://wiki.ubuntu.com/UbiquityAutomation 
# https://help.ubuntu.com/lts/installation-guide/amd64/ch04s06.html 
# https://help.ubuntu.com/lts/installation-guide/example-preseed.txt 
# https://help.ubuntu.com/lts/installation-guide/amd64/apbs02.html 

# Old partitioning - debian-installer style
#d-i partman-auto/method string crypto
#d-i partman-lvm/device_remove_lvm boolean true
#d-i partman-md/device_remove_md boolean true
#d-i partman-lvm/confirm boolean true
#d-i partman-lvm/confirm_nooverwrite boolean true

# Ubiquity style partitioning
ubiquity partman-auto/disk string /dev/sda
ubiquity partman-auto/method string regular
ubiquity partman-auto-lvm/guided_size string max
ubiquity partman-lvm/device_remove_lvm boolean true
ubiquity partman-md/device_remove_md boolean true
# Uncomment line below to skip partioning layout confirmation
#ubiquity partman-lvm/confirm boolean true

### PARTITIONING ###
# To customise the partitioning layout comment the following line
# and uncomment the "Custom Partitioning" section below
# and apply the appropriate changes
ubiquity partman-auto/choose_recipe select home

### BEGIN CUSTOM PARTITIONING ###
# 
#ubiquity partman-auto/choose_recipe select my-recipe
#
#ubiquity partman-auto/expert_recipe string                    
#      root-encrypted ::                                       
#              512 512 512 fat32                               
#                      $primary{ }                             
#                      method{ efi }                           
#                      $lvmignore{ }                           
#                      format{ }                               
#              .                                               
#              1000 1000 1000 ext4                             
#                      $primary{ } $bootable{ }                
#                      method{ format } format{ }              
#                      use_filesystem{ } filesystem{ ext4 }    
#                      mountpoint{ /boot }                     
#              .                                               
#              2000 2000 2000 linux-swap                       
#                      $lvmok{ } lv_name{ swap }               
#                      method{ swap } format{ }                
#              .                                               
#              5000 10000 40000 ext4                           
#                      $lvmok{ } lv_name{ root }               
#                      method{ format } format{ }              
#                      use_filesystem{ } filesystem{ ext4 }    
#                      mountpoint{ / }                         
#              .                                               
#              1000 2000 4000 ext4                             
#                      $lvmok{ } lv_name{ tmp }                
#                      method{ format } format{ }              
#                      use_filesystem{ } filesystem{ ext4 }    
#                      mountpoint{ /tmp }                      
#              .                                               
#              500 10000 1000000000 ext4                       
#                      $lvmok{ } lv_name{ home }               
#                      method{ format } format{ }              
#                      use_filesystem{ } filesystem{ ext4 }    
#                      mountpoint{ /home }                     
#              .                                               
#
### END CUSTOM PARTITIONING ###

# This makes partman automatically partition without confirmation
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
# d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# Locale
d-i debian-installer/locale string uk_UA
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us

# Network
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain
d-i netcfg/choose_interface select auto

# Clock
d-i clock-setup/utc-auto boolean true
d-i clock-setup/utc boolean true
d-i time/zone string Europe/Kiev
d-i clock-setup/ntp boolean true

# Packages, Mirrors, Image
d-i base-installer/kernel/override-image string linux-server
d-i base-installer/kernel/override-image string linux-image-amd64
d-i mirror/country string UA
d-i mirror/http/proxy string
d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i pkgsel/install-language-support boolean false
tasksel tasksel/first multiselect ubuntu-desktop

# Users
d-i passwd/user-fullname string Ansible
d-i passwd/username string ansible
d-i passwd/user-password-crypted password $apr1$3pZXgLAL$Z5OvnecJQvqFPtLt43IGo0
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password $apr1$6WCLYead$zr4pYzQ/Crm0bMpg41spr0
d-i user-setup/allow-password-weak boolean true

### POST INSTALLATION COMMANDS ###
# Run custom commands post installation
# For example install a Software Configuration Management tool
ubiquity ubiquity/success_command string \
  cp -a /cdrom/install/pbis-open-8.8.0.506.linux.x86_64.deb.sh /target/root/ ;\
  chmod 777 /target/root/pbis-open-8.8.0.506.linux.x86_64.deb.sh get touch /root/pbis-open-8.8.0.506.linux.x86_64.deb.sh

